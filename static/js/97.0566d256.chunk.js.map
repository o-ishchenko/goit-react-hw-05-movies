{"version":3,"file":"static/js/97.0566d256.chunk.js","mappings":"gMACA,EAAyB,iCAAzB,EAAkE,gCAAlE,EAAwG,8BAAxG,EAA6I,+BAA7I,EAAqL,iC,mECkGrL,MAtFA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GACXE,EAAAA,GACkBZ,GACfa,MAAK,SAAAN,GACJC,EAASD,GACTG,GAAW,MAEZI,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAA,UAAeD,IACfL,GAAW,QAEd,CAACV,KAWF,iCACE,mBAAQiB,UAAWC,EAAeC,KAAK,SAASC,QAVnC,WACflB,EACEE,EAASiB,MAAT,UACOjB,EAASiB,MAAMC,KAAKC,UAD3B,OACsCnB,EAASiB,MAAMC,KAAKE,QACtD,YAMJ,sBAGA,kBACCf,IAAW,SAACgB,EAAA,EAAD,IACXlB,IACC,iCACE,iBAAKU,UAAWC,EAAhB,WACE,gBACEQ,IAAG,yCAAoCnB,EAAMoB,aAC7CC,IAAKrB,EAAMsB,SAEb,4BACE,wBAAKtB,EAAMsB,MAAQtB,EAAMsB,MAAQtB,EAAMuB,QACvC,wCAAqC,GAArBvB,EAAMwB,aAAtB,QACA,sCACA,uBAAIxB,EAAMyB,YACV,mCACCzB,EAAM0B,QACL1B,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OACpB,iBAAMlB,UAAWC,EAAjB,SACGiB,EAAML,MAD2BK,EAAMC,cAMlD,mBACA,SAAC,KAAD,CACEC,GAAE,OACFhB,MAAO,CAAEC,KAAMlB,EAASiB,MAAMC,MAC9BL,UAAW,qBAAGqB,SACDpB,EAAgBA,GAJ/B,mBASA,SAAC,KAAD,CACEmB,GAAE,UACFhB,MAAO,CAAEC,KAAMlB,EAASiB,MAAMC,MAC9BL,UAAW,qBAAGqB,SACDpB,EAAgBA,GAJ/B,sBASA,mBACA,SAAC,EAAAqB,SAAD,CAAUC,UAAU,SAACf,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,c,0MC1FZgB,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,oCACQC,EADR,yBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwCC,GAAxC,uFACkBP,IAAAA,IAAA,gCACIC,EADJ,kBACqBM,EADrB,gCADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bb,GAA9B,uFACkBK,IAAAA,IAAA,iBAAoBL,EAApB,oBAAkCM,IADpD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCd,GAAhC,uFACkBK,IAAAA,IAAA,iBACXL,EADW,4BACWM,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKM,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BhB,GAA5B,uFACkBK,IAAAA,IAAA,iBACXL,EADW,4BACWM,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.js","services/api-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetailsPage_button__mSHH6\",\"genre\":\"MovieDetailsPage_genre__1VQLG\",\"box\":\"MovieDetailsPage_box__qdKuD\",\"link\":\"MovieDetailsPage_link__rhdjc\",\"active\":\"MovieDetailsPage_active__52Wu-\"};","import styles from './MovieDetailsPage.module.css';\nimport { useState, useEffect, Suspense } from 'react';\nimport {\n  useParams,\n  useLocation,\n  useNavigate,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport * as moviesSearch_API from '../../services/api-movies';\nimport { toast } from 'react-toastify';\nimport Loader from '../../components/Loader';\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    moviesSearch_API\n      .fetchMovieById(movieId)\n      .then(movie => {\n        setMovie(movie);\n        setLoading(false);\n      })\n      .catch(error => {\n        toast.error(`${error}`);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  const onGoBack = () => {\n    navigate(\n      location.state\n        ? `${location.state.from.pathname}${location.state.from.search}`\n        : '/movies'\n    );\n  };\n\n  return (\n    <>\n      <button className={styles.button} type=\"button\" onClick={onGoBack}>\n        Go back\n      </button>\n      <br />\n      {loading && <Loader />}\n      {movie && (\n        <>\n          <div className={styles.box}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div>\n              <h2>{movie.title ? movie.title : movie.name}</h2>\n              <p>User score: {movie.vote_average * 10}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              {movie.genres &&\n                movie.genres.map(genre => (\n                  <span className={styles.genre} key={genre.id}>\n                    {genre.name}\n                  </span>\n                ))}\n            </div>\n          </div>\n          <hr />\n          <NavLink\n            to={`cast`}\n            state={{ from: location.state.from }}\n            className={({ isActive }) =>\n              isActive ? styles.active : styles.link\n            }\n          >\n            Cast\n          </NavLink>\n          <NavLink\n            to={`reviews`}\n            state={{ from: location.state.from }}\n            className={({ isActive }) =>\n              isActive ? styles.active : styles.link\n            }\n          >\n            Reviews\n          </NavLink>\n          <hr />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3f733d367aa88a68e8778536d460fad2';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    `/trending/all/day?api_key=${API_KEY}&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMoviesBySearchQuery(searchQuery) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function fetchMovieActors(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n"],"names":["movieId","useParams","navigate","useNavigate","location","useLocation","useState","movie","setMovie","loading","setLoading","useEffect","moviesSearch_API","then","catch","error","toast","className","styles","type","onClick","state","from","pathname","search","Loader","src","poster_path","alt","title","name","vote_average","overview","genres","map","genre","id","to","isActive","Suspense","fallback","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMoviesBySearchQuery","searchQuery","fetchMovieById","fetchMovieActors","cast","fetchReviews"],"sourceRoot":""}